{"sig": "accuse_test_failure(signature: str, preconditions: List, postconditions: List, function_implementation: str, test_name: str, test_description: str, test_implementation: str, test_failure: str) -> NoneType", "pre": ["\"signature\" is the signature of the function under test", "\"preconditions\" is a list of preconditions of the function under test", "\"postconditions\" is a list of postconditions of the function under test", "\"function_implementation\" is the Python function that exercises the function under test with the described inputs and verifies the described outputs", "\"test_name\" is the name of the Python test to implement for the function under test", "\"test_description\" is the test case description of the Python test to implement for the function under test", "\"test_implementation\" is the Python function that exercises the function under test with the described inputs and verifies the described outputs", "\"test_failure\" is the output of the test function when it failed", "the \"preconditions\" and \"postconditions\" superscede the \"test_description\", and only the preconditions may be assumed, and only the postconditions must be satisfied and satisfied completely", "a \"test_description\" that does not assume the \"preconditions\" is erroneous", "a \"test_description\" that exceeds the \"postconditions\" is erroneous"], "post": ["the return value is a string that elaborates on why the test failed, examines the \"test_implementation\" for bugs or incorrect assumptions beyond those specified, and examines the \"function_implementation\" for bugs or incorrect assumptions beyond those specified.", "if the \"test_description\" is erroneous, it is assumed that the \"function_implementation\" is correct and the \"test_implementation\" is incorrect", "the return value ends with either the text \"CULPRIT: test_implementation\" or \"CULPRIT: function_implementation\""], "inputs": ["signature is lorum_ipsum(words: int) -> str", "preconditions is ['\"words\" is a non-negative integer']", "postconditions is ['the return value is a lorem ipsum with a word-count of \"words\"', 'The function has a docstring']", "function_implementation is def lorum_ipsum(words: int) -> str:\n    \"\"\"\n    Generates a lorem ipsum text with a specified number of words.\n    \n    Parameters:\n    words (int): The number of words to generate in the lorem ipsum text.\n    \n    Returns:\n    str: A string containing the lorem ipsum text with the specified number of words.\n    \"\"\"\n    \n    lorem_ipsum_text = (\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et \"\n        \"dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex \"\n        \"ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu \"\n        \"fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt \"\n        \"mollit anim id est laborum.\"\n    )\n    \n    # Split the lorem ipsum text into words\n    lorem_words = lorem_ipsum_text.split()\n    \n    # Calculate the number of times to repeat the lorem ipsum text to achieve the desired word count\n    repeat_count = words // len(lorem_words) + 1\n    \n    # Repeat and join the lorem ipsum text to get close to the requested word count, then select the exact number of words\n    result_text = ' '.join((lorem_words * repeat_count)[:words])\n    \n    return result_text", "test_name is test_lorum_ipsum_with_very_large_number_of_words", "test_description is {'description': 'Test with a very large number of words', 'input': {'words': 100}, 'expected_result': {'return_value': 'lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'word_count': 100, 'docstring_present': True}}", "test_implementation is def test_lorum_ipsum_with_very_large_number_of_words():\n    print(\"TEST CASE BEGINS\")\n    print(\"test_lorum_ipsum_with_very_large_number_of_words\")\n    test_description = {\n        'description': 'Test with a very large number of words',\n        'input': {'words': 100},\n        'expected_result': {\n            'return_value': 'lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            'word_count': 100,\n            'docstring_present': True\n        }\n    }\n    print(test_description)\n    \n    try:\n        result = lorum_ipsum(words=100)\n    except Exception as e:\n        print(e)\n        print(\"FAIL\")\n    else:\n        docstring_present = lorum_ipsum.__doc__ is not None\n        actual_word_count = len(result.split())\n        \n        if result == test_description['expected_result']['return_value'] and actual_word_count == test_description['expected_result']['word_count'] and docstring_present == test_description['expected_result']['docstring_present']:\n            print(\"PASS\")\n        else:\n            print(\"FAIL\")\n            if result != test_description['expected_result']['return_value']:\n                print(f\"Expected return value does not match actual. Expected: {test_description['expected_result']['return_value']}. Actual: {result}\")\n            if actual_word_count != test_description['expected_result']['word_count']:\n                print(f\"Word count differs. Expected: {test_description['expected_result']['word_count']}, but got: {actual_word_count}\")\n            if docstring_present != test_description['expected_result']['docstring_present']:\n                print(f\"Docstring presence mismatch. Expected: {test_description['expected_result']['docstring_present']}, but got: {docstring_present}\")\n\n    print(\"TEST CASE ENDS\")\n", "test_failure is TEST CASE BEGINS\ntest_lorum_ipsum_with_very_large_number_of_words\n{'description': 'Test with a very large number of words', 'input': {'words': 100}, 'expected_result': {'return_value': 'lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'word_count': 100, 'docstring_present': True}}\nFAIL\nExpected return value does not match actual. Expected: lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.. Actual: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\nTEST CASE ENDS\n"]}