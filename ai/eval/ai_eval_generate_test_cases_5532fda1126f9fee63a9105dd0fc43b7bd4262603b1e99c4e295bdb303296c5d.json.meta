{"sig": "generate_test_cases(signature: str, preconditions: List[str], postconditions: List[str]) -> List[Dict[str, str]]", "pre": ["\"signature\" is a string representing the function signature", "\"preconditions\" is a list of strings representing the preconditions of the function", "\"postconditions\" is a list of strings representing the postconditions of the function"], "post": ["the return value is a JSON list of test case descriptions that collectively explore the full space (and not more) of the preconditions as inputs, including edge cases, and the expected results based on the postconditions", "the return value is a JSON list of test case descriptions that make no additional assumptions beyond the preconditions, and performs no validation of given assumptions", "the return value is a JSON list of test case descriptions that test no additional objectives than those given, and test the given objectives completely", "the return value is a JSON list of dictionaries containing the key 'description' explaining what the test verifies, and the key 'inputs' which are literals to pass to the function under test"], "inputs": ["signature is \"lorum_ipsum(words: int) -> str\"", "preconditions is \"['\"words\" is a non-negative integer']\"", "postconditions is \"['the return value is a lorem ipsum with a word-count of \"words\"']\""]}