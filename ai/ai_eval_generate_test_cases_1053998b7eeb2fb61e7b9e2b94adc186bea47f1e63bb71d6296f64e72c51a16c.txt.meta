{"sig": "generate_test_cases(signature: str, preconditions: List, postconditions: List) -> List", "pre": ["\"signature\" is a string representing the function signature", "\"preconditions\" is a list of strings representing the preconditions of the function", "\"postconditions\" is a list of strings representing the postconditions of the function"], "post": ["the return value is a json list of test case descriptions that explore the space of the preconditions as inputs, including edge cases, and the expected results."], "inputs": ["signature is fibonacci(n: int) -> int", "preconditions is ['\"n\" is a non-negative integer']", "postconditions is ['the return value is the nth fibonacci number', 'The function has a docstring']"]}